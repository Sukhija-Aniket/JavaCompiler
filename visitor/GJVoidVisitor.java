//
// Generated by JTB 1.3.2
//

package visitor;
import syntaxtree.*;
import java.util.*;

/**
 * All GJ void visitors must implement this interface.
 */

public interface GJVoidVisitor<A> {

   //
   // GJ void Auto class visitors
   //

   public void visit(NodeList n, A argu);
   public void visit(NodeListOptional n, A argu);
   public void visit(NodeOptional n, A argu);
   public void visit(NodeSequence n, A argu);
   public void visit(NodeToken n, A argu);

   //
   // User-generated visitor methods below
   //

   /**
    * f0 -> ( Statement() )*
    * f1 -> <EOF>
    */
   public void visit(Goal n, A argu);

   /**
    * f0 -> PackageDeclaration()
    *       | ImportStatement()
    *       | OtherStatement()
    */
   public void visit(Statement n, A argu);

   /**
    * f0 -> "package"
    * f1 -> DotIdentifier()
    * f2 -> ";"
    */
   public void visit(PackageDeclaration n, A argu);

   /**
    * f0 -> "import"
    * f1 -> DotIdentifier()
    * f2 -> ";"
    */
   public void visit(ImportStatement n, A argu);

   /**
    * f0 -> <IDENTIFIER>
    * f1 -> ( RemainingIdentifier() )*
    */
   public void visit(DotIdentifier n, A argu);

   /**
    * f0 -> "."
    * f1 -> ( Identifier() | Asterisk() )
    */
   public void visit(RemainingIdentifier n, A argu);

   /**
    * f0 -> <MULT>
    */
   public void visit(Asterisk n, A argu);

   /**
    * f0 -> "["
    *       | "]"
    *       | "{"
    *       | "}"
    *       | ";"
    *       | "."
    *       | "="
    *       | "<="
    *       | "!="
    *       | "+"
    *       | "float"
    *       | "-"
    *       | "*"
    *       | "/"
    *       | "&&"
    *       | "||"
    *       | "!"
    *       | "boolean"
    *       | "class"
    *       | "interface"
    *       | "else"
    *       | "extends"
    *       | "false"
    *       | "if"
    *       | "while"
    *       | "int"
    *       | "main"
    *       | "new"
    *       | "public"
    *       | "return"
    *       | "static"
    *       | "String"
    *       | "this"
    *       | "true"
    *       | "System.out.println"
    *       | "void"
    *       | "#define"
    *       | <FLOAT_LITERAL>
    *       | <INTEGER_LITERAL>
    *       | <IDENTIFIER>
    *       | <STRING_LITERAL>
    */
   public void visit(OtherStatement n, A argu);

   /**
    * f0 -> <IDENTIFIER>
    */
   public void visit(Identifier n, A argu);

}

